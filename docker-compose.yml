services:
  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioBRIN # Ganti sesuai kebutuhan
      MINIO_ROOT_PASSWORD: minioBRIN # Ganti sesuai kebutuhan
    ports:
      - "9000:9000" # Port API MinIO
      - "9001:9001" # Port Konsol Admin
    volumes:
      - ./docker-dev-volumes/minio_data:/data # Volume untuk menyimpan data
      - ./docker-dev-volumes/minio_config:/root/.minio # Volume untuk menyimpan konfigurasi
    command: server /data --console-address ":9001"
  redis:
    image: redis
    ports:
      - 6379:6379
  db:
    ports:
      - 5432:5432
    image: postgres:latest
    environment:
      - POSTGRES_DB=db
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - TZ=Asia/Jakarta
    volumes:
      - ./docker-dev-volumes/pg_data:/var/lib/postgresql/data  # Persist PostgreSQL data
  sso:
    build:
      context: .
      dockerfile : Dockerfile-dev
    tty : true
    environment:
      - BASE_URL=http://localhost:81
    volumes:
      - ./docker-dev-volumes:/vars
      - ./docker-dev-volumes/php:/usr/local/etc/php
      - ./docker-dev-volumes/apache2:/etc/apache2
      - ./sso:/var/www
      - ./sso/public:/var/www/html
    ports:
      - 81:80
  keycloak-src:
    tty: true
    image: openjdk:21-slim
    ports:
      - 90:8080
      - 93:8443
    volumes:
      - ./keycloak-src:/opt/keycloak-src  
      - ./keycloak-dist:/opt/keycloak-dist
      - ./certs:/opt/localhost/certs
  keycloak:
    build: 
      context: keycloak-image
      dockerfile: Dockerfile
    deploy:
      replicas: 1  # Number of replicas
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://db:5432/db_keycloak
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=postgres
      - KC_HOSTNAME=host.docker.internal
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - TZ=Asia/Jakarta
      - KC_PROXY=edge  # Wajib untuk reverse proxy
      - PROXY_ADDRESS_FORWARDING=true
    ports:
      - "8080:8080"
    depends_on:
      - db
    command: start --http-enabled=true --hostname-strict=false --hostname host.docker.internal
    #command: start-dev --proxy-headers forwarded --http-enabled=true --hostname-strict=false --hostname host.docker.internal
  keycloak-https:
    tty: true
    build: 
      context: keycloak-image-https
      dockerfile: Dockerfile
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://db:5432/db_keycloak_https
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=postgres
      - KC_HOSTNAME=host.docker.internal
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_LOG_LEVEL=DEBUG
      - TZ=Asia/Jakarta
    ports:
      - "8443:8443"  # Port Host:Port Container
    depends_on:
      - db
    volumes:
      - './keycloak-custom-theme/themes/custom-theme/theme:/opt/keycloak/themes'
  keycloak_client_laravel:
    build:
      context: .
      dockerfile: Dockerfile-keycloak_client_laravel
    ports:
      - 82:80
    volumes:
      - ./keycloak_client_laravel:/var/www
      - ./keycloak_client_laravel/public:/var/www/html
      - /var/www/storage
      - /var/www/bootstrap/cache
  keycloak_client_php:
    build:
      context: .
      dockerfile: Dockerfile-keycloak_client_php
    ports:
      - 83:80
    volumes:
      - ./keycloak_client_php:/var/www/html
  keycloak_client_next:
    tty: true
    build:
      context: .
      dockerfile: Dockerfile-keycloak_client_next
    ports:
      - 84:3000
    volumes:
      - ./keycloak_client_next:/app
    command: "npm run dev  --experimental-https"
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx-reverse-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs/cert.pem:/etc/nginx/cert.pem:ro
      - ./certs/key.pem:/etc/nginx/key.pem:ro
    ports:
      - "443:443"
    depends_on:
      - keycloak
    restart: always
  openldap:
    image: osixia/openldap:latest
    container_name: openldap
    environment:
      LDAP_ORGANISATION: "My Organization"
      LDAP_DOMAIN: "example.com"
      LDAP_ADMIN_PASSWORD: "admin"
    ports:
      - "389:389"   # Port LDAP
      - "636:636"   # Port LDAPS (SSL)
    restart: always
    volumes:
      - ./docker-dev-volumes/ldap:/var/lib/ldap
      - ./docker-dev-volumes/etc-slapd.d:/etc/ldap/slapd.d
  phpldapadmin:
    image: osixia/phpldapadmin:latest
    container_name: phpldapadmin
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: host.docker.internal
      PHPLDAPADMIN_HTTPS: "false"  # Non-SSL mode
    ports:
      - "8081:80"
    restart: always
  kong:
    image:  kong:latest
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=host.docker.internal
      - KONG_PG_USER=postgres
      - KONG_PG_PASSWORD=postgres
      - KONG_PG_DATABASE=db_kong
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_ADMIN_GUI_URL=http://localhost:8002
      - KONG_PLUGINS=bundled,oidc
      - KONG_LUA_PACKAGE_PATH=/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua;/kong/plugins/?.lua
      - KONG_LUA_PACKAGE_CPATH=/usr/local/lib/lua/5.1/?.so
    depends_on:
      - db
    ports:
      - "8000:8000"  # Proxy port
      - "8001:8001"  # Admin API port
      - "8002:8002"  # Admin GUI port
      - "8003:8003"  # Portal GUI port
  kong-migrations:
    image: kong:3.0
    command: "kong migrations bootstrap"
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: host.docker.internal
      KONG_PG_USER: postgres
      KONG_PG_PASSWORD: postgres
      KONG_PG_DATABASE: db_kong
    depends_on:
      - db
    restart: "no"