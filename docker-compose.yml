services:
  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioBRIN # Ganti sesuai kebutuhan
      MINIO_ROOT_PASSWORD: minioBRIN # Ganti sesuai kebutuhan
    ports:
      - "9000:9000" # Port API MinIO
      - "9001:9001" # Port Konsol Admin
    volumes:
      - ./docker-dev-volumes/minio_data:/data # Volume untuk menyimpan data
      - ./docker-dev-volumes/minio_config:/root/.minio # Volume untuk menyimpan konfigurasi
    command: server /data --console-address ":9001"
  redis:
    image: redis
    ports:
      - 6379:6379
  db:
    ports:
      - 5432:5432
    image: postgres:latest
    environment:
      - POSTGRES_DB=db
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - TZ=Asia/Jakarta
    volumes:
      - ./docker-dev-volumes/pg_data:/var/lib/postgresql/data  # Persist PostgreSQL data
  sso:
    build:
      context: .
      dockerfile : Dockerfile-dev
    tty : true
    environment:
      - BASE_URL=http://localhost:81
    volumes:
      - ./docker-dev-volumes:/vars
      - ./docker-dev-volumes/php:/usr/local/etc/php
      - ./docker-dev-volumes/apache2:/etc/apache2
      - ./sso:/var/www
      - ./sso/public:/var/www/html
    ports:
      - 81:80
  keycloak:
    build: 
      context: keycloak-image
      dockerfile: Dockerfile
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://db:5432/db_keycloak
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=postgres
      - KC_HOSTNAME=host.docker.internal
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - TZ=Asia/Jakarta
      - KC_PROXY=edge  # Wajib untuk reverse proxy
    ports:
      - "8080:8080"  # Port Host:Port Container
    depends_on:
      - db
    command: start-dev --http-enabled=true --hostname-strict=false --hostname host.docker.internal
  keycloak-https:
    tty: true
    build: 
      context: keycloak-image-https
      dockerfile: Dockerfile
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://db:5432/db_keycloak_https
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=postgres
      - KC_HOSTNAME=host.docker.internal
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_LOG_LEVEL=DEBUG
      - TZ=Asia/Jakarta
      - KC_HTTPS_CERTIFICATE_FILE=/opt/localhost/certs/cert.pem
      - KC_HTTPS_CERTIFICATE_KEY_FILE=/opt/localhost/certs/key.pem
    volumes:
      - ./certs:/opt/localhost/certs
    ports:
      - "8443:8443"  # Port Host:Port Container
    depends_on:
      - db
    command: start --https-certificate-file=/opt/localhost/certs/cert.pem --https-certificate-key-file=/opt/localhost/certs/key.pem
  keycloak_client_laravel:
    build:
      context: .
      dockerfile: Dockerfile-keycloak_client_laravel
    ports:
      - 82:80
    volumes:
      - ./keycloak_client_laravel:/var/www
      - ./keycloak_client_laravel/public:/var/www/html
      - /var/www/storage
      - /var/www/bootstrap/cache
  keycloak_client_php:
    build:
      context: .
      dockerfile: Dockerfile-keycloak_client_php
    ports:
      - 83:80
    volumes:
      - ./keycloak_client_php:/var/www/html
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx-reverse-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs/cert.pem:/etc/nginx/cert.pem:ro
      - ./certs/key.pem:/etc/nginx/key.pem:ro
    ports:
      - "443:443"
    depends_on:
      - keycloak
    restart: always
